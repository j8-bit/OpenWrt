name: Build OpenWrt for NanoPi R5S

on:
  workflow_dispatch: {}

env:
  OPENWRT_BRANCH: openwrt-23.05   # 如需换版本，改这里，比如：openwrt-24.10（若存在）
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout (your repo, optional)
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
            file wget curl time ccache

      - name: Clone OpenWrt
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt
          git checkout "${OPENWRT_BRANCH}"

      - name: Cache dl/ (speeds up subsequent builds)
        uses: actions/cache@v4
        with:
          path: openwrt/dl
          key: dl-${{ env.OPENWRT_BRANCH }}-${{ runner.os }}

      - name: Feeds update & install
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Inject .config for NanoPi R5S
        working-directory: openwrt
        run: |
          cat > .config <<'CFG'
          CONFIG_TARGET_rockchip=y
          CONFIG_TARGET_rockchip_armv8=y
          CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-r5s=y

          # ---- 基础特性（尽量精简，首次构建成功率更高）----
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_htop=y

          # ---- LuCI（Web 管理界面）----
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-ssl-openssl=y     # HTTPS 版 LuCI
          #（luci-ssl-openssl 会自动带 uhttpd-openssl）

          # ---- PPPoE & 网络常用 ----
          CONFIG_PACKAGE_ppp=y
          CONFIG_PACKAGE_ppp-mod-pppoe=y

          # ---- USB 网卡 & 存储（按需开启）----
          CONFIG_PACKAGE_kmod-usb-net=y
          CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
          CONFIG_PACKAGE_kmod-usb-net-ax88179_178a=y
          CONFIG_PACKAGE_block-mount=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-uas=y
          CONFIG_PACKAGE_kmod-fs-ext4=y

          # ---- 可选：常见诊断工具 ----
          CONFIG_PACKAGE_iperf3=y
          CONFIG_PACKAGE_tcpdump=y

          # 体积控制：去掉调试符号与源码（减小固件）
          CONFIG_STRIP_KERNEL_EXPORTS=y
          CONFIG_USE_MUSL=y
          CONFIG_SDK=n
          CONFIG_BUILD_PATENTED=n
          CFG

          # 生成最终配置（填充依赖）
          make defconfig

      - name: Show final config (for debugging)
        working-directory: openwrt
        run: |
          grep -E 'CONFIG_TARGET_rockchip|CONFIG_PACKAGE_luci|CONFIG_PACKAGE_ppp|CONFIG_PACKAGE_kmod-usb' .config || true

      - name: Download sources
        working-directory: openwrt
        run: |
          make download -j8

      - name: Build firmware
        working-directory: openwrt
        run: |
          echo "::group::Compiler info"
          gcc --version || true
          echo "::endgroup::"
          make -j"$(nproc)" V=s

      - name: Collect artifacts
        if: success()
        run: |
          mkdir -p out
          cp -av openwrt/bin/targets/rockchip/armv8/* out/ || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nanopi-r5s-openwrt-${{ env.OPENWRT_BRANCH }}
          path: out
          if-no-files-found: error
